!function(e){function n(e){function n(e,n){n.series.curvedLines.active&&e.hooks.processDatapoints.unshift(r)}function r(e,n,r){var t=r.points.length/r.pointsize,o=.005,s=u(n.curvedLines);if(!s&&1==n.curvedLines.apply&&void 0===n.originSeries&&t>1+o)if(n.lines.fill){var a=i(r,n.curvedLines,1),p=i(r,n.curvedLines,2);r.pointsize=3,r.points=[];for(var v=0,f=0,h=0,l=2;h<a.length||v<p.length;)a[h]==p[v]?(r.points[f]=a[h],r.points[f+1]=a[h+1],r.points[f+2]=p[v+1],v+=l,h+=l):a[h]<p[v]?(r.points[f]=a[h],r.points[f+1]=a[h+1],r.points[f+2]=f>0?r.points[f-1]:null,h+=l):(r.points[f]=p[v],r.points[f+1]=f>1?r.points[f-2]:null,r.points[f+2]=p[v+1],v+=l),f+=3}else n.lines.lineWidth>0&&(r.points=i(r,n.curvedLines,1),r.pointsize=2)}function i(e,n,r){if("undefined"!=typeof n.legacyOverride&&0!=n.legacyOverride){var i={fit:!1,curvePointFactor:20,fitPointDist:void 0},o=jQuery.extend(i,n.legacyOverride);return s(e,o,r)}return t(e,n,r)}function t(e,n,r){for(var i=e.points,t=e.pointsize,s=o(e,n,r),u=[],a=0,p=0;p<i.length-t;p+=t){var v=p,f=p+r,h=i[v],l=i[v+t],c=(l-h)/Number(n.nrSplinePoints);u.push(i[v]),u.push(i[f]);for(var d=h+=c;l>d;d+=c)u.push(d),u.push(s[a](d));a++}return u.push(i[i.length-t]),u.push(i[i.length-t+r]),u}function o(e,n,r){for(var i=e.points,t=e.pointsize,o=[],s=[],u=0;u<i.length-t;u+=t){var a=u,p=u+r,v=i[a+t]-i[a],f=i[p+t]-i[p];o.push(v),s.push(f/v)}var h=[s[0]];if(n.monotonicFit)for(var u=1;u<o.length;u++){var l=s[u],c=s[u-1];if(0>=l*c)h.push(0);else{var d=o[u],g=o[u-1],y=d+g;h.push(3*y/((y+d)/c+(y+g)/l))}}else for(var u=t;u<i.length-t;u+=t){var a=u,p=u+r;h.push(Number(n.tension)*(i[p+t]-i[p-t])/(i[a+t]-i[a-t]))}h.push(s[s.length-1]);var w=[],L=[];for(u=0;u<o.length;u++){var P=h[u],m=h[u+1],l=s[u],A=1/o[u],y=P+m-l-l;w.push(y*A*A),L.push((l-y-P)*A)}for(var z=[],u=0;u<o.length;u++){var b=function(e,n,r,i,t){return function(o){var s=o-e,u=s*s;return n*s*u+r*u+i*s+t}};z.push(b(i[u*t],w[u],L[u],h[u],i[u*t+r]))}return z}function s(e,n,r){var i=e.points,t=e.pointsize,o=Number(n.curvePointFactor)*(i.length/t),s=new Array,u=new Array,a=-1,p=-1,v=0;if(n.fit){var f;if("undefined"==typeof n.fitPointDist){var h=i[0],l=i[i.length-t];f=(l-h)/5e4}else f=Number(n.fitPointDist);for(var c=0;c<i.length;c+=t){var d,g;a=c,p=c+r,d=i[a]-f,g=i[a]+f;for(var y=2;d==i[a]||g==i[a];)d=i[a]-f*y,g=i[a]+f*y,y++;s[v]=d,u[v]=i[p],v++,s[v]=i[a],u[v]=i[p],v++,s[v]=g,u[v]=i[p],v++}}else for(var c=0;c<i.length;c+=t)a=c,p=c+r,s[v]=i[a],u[v]=i[p],v++;var w=s.length,L=new Array,P=new Array;L[0]=0,L[w-1]=0,P[0]=0;for(var c=1;w-1>c;++c){var m=s[c+1]-s[c-1];if(0==m)return[];var A=(s[c]-s[c-1])/m,z=A*L[c-1]+2;L[c]=(A-1)/z,P[c]=(u[c+1]-u[c])/(s[c+1]-s[c])-(u[c]-u[c-1])/(s[c]-s[c-1]),P[c]=(6*P[c]/(s[c+1]-s[c-1])-A*P[c-1])/z}for(var v=w-2;v>=0;--v)L[v]=L[v]*L[v+1]+P[v];var b=(s[w-1]-s[0])/(o-1),D=new Array,F=new Array,O=new Array;for(D[0]=s[0],F[0]=u[0],O.push(D[0]),O.push(F[0]),v=1;o>v;++v){D[v]=D[0]+v*b;for(var N=w-1,j=0;N-j>1;){var k=Math.round((N+j)/2);s[k]>D[v]?N=k:j=k}var S=s[N]-s[j];if(0==S)return[];var C=(s[N]-D[v])/S,Q=(D[v]-s[j])/S;F[v]=C*u[j]+Q*u[N]+((C*C*C-C)*L[j]+(Q*Q*Q-Q)*L[N])*(S*S)/6,O.push(D[v]),O.push(F[v])}return O}function u(e){if("undefined"!=typeof e.fit||"undefined"!=typeof e.curvePointFactor||"undefined"!=typeof e.fitPointDist)throw new Error("CurvedLines detected illegal parameters. The CurvedLines API changed with version 1.0.0 please check the options object.");return!1}e.hooks.processOptions.push(n)}var r={series:{curvedLines:{active:!1,apply:!1,monotonicFit:!1,tension:.5,nrSplinePoints:20,legacyOverride:void 0}}};e.plot.plugins.push({init:n,options:r,name:"curvedLines",version:"1.1.1"})}(jQuery);